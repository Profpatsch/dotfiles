## ELinks 0.13.GIT configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.accesskey 
    #  Options for handling of link access keys. An HTML document can use the
    #  ACCESSKEY attribute to assign an access key to an element. When an access
    #  key is pressed, the corresponding element will be given focus.

      ## document.browse.accesskey.auto_follow [0|1]
      #  Automatically follow a link or submit a form if appropriate accesskey
      #  is pressed - this is the standard behaviour, but it's considered
      #  dangerous.
      set document.browse.accesskey.auto_follow = 0


    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.auto_submit [0|1]
      #  Automagically submit a form when enter is pressed with a text field
      #  selected.
      set document.browse.forms.auto_submit = 1

      ## document.browse.forms.confirm_submit [0|1]
      #  Ask for confirmation when submitting a form.
      set document.browse.forms.confirm_submit = 0

      ## document.browse.forms.editor <str>
      #  Path to the executable that ELinks should launch when the user requests
      #  to edit a textarea with an external editor.
      #  
      #  If this is blank, ELinks will use the value of the environmental
      #  variable $EDITOR. If $EDITOR is empty or not set, ELinks will then
      #  default to "vi".
      set document.browse.forms.editor = "/bin/vim"

      ## document.browse.forms.show_formhist [0|1]
      #  Ask if a login form should be saved to file or not. This option only
      #  disables the dialog, already saved login forms are unaffected.
      set document.browse.forms.show_formhist = 1


    ## document.browse.images 
    #  Options for handling of images.

      ## document.browse.images.show_as_links [0|1]
      #  Display links to images without an alt attribute. If this option is
      #  off, these images are completely invisible.
      set document.browse.images.show_as_links = 0

      ## document.browse.images.show_any_as_links [0|1]
      #  Display links to any images in the document, regardless of them having
      #  an alt attribute or not. If this option is off, the alt attribute
      #  contents is shown, but as normal text, not selectable as a link.
      set document.browse.images.show_any_as_links = 1


    ## document.browse.scrolling 
    #  Scrolling options.

      ## document.browse.scrolling.vertical_overlap <num>
      #  Number of overlapping lines between the new page displayed and the
      #  previous one when scrolling one page up or down.
      set document.browse.scrolling.vertical_overlap = 2




## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"





##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.download 
  #  Options regarding files downloading and handling.

    ## document.download.directory <str>
    #  Default download directory.
    set document.download.directory = ""



## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog. It makes it possible
  #  to define a set of prefixes that will be expanded if they match a string
  #  entered in the goto dialog. The prefixes can be dumb, meaning that they
  #  work only like URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.dumb 
    #  Dumb prefixes, see enable-dumb description for details.

      ## protocol.rewrite.dumb.aw <str>
      #  Replacement URI for this dumbprefix:
      #  %c in the string means the current URL
      #  %% in the string means '%'
      set protocol.rewrite.dumb.aw = "http://wiki.archlinux.org/"







##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog. It makes it possible
  #  to define a set of prefixes that will be expanded if they match a string
  #  entered in the goto dialog. The prefixes can be dumb, meaning that they
  #  work only like URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.aws <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.aws = "https://wiki.archlinux.org/index.php?title=Special:Search&search=%s"




